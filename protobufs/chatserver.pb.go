// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatserver.proto

package protobufs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChatMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Channel              string   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8740d2dcab84458e, []int{0}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChatMessage) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChatMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChatMessageAck struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessageAck) Reset()         { *m = ChatMessageAck{} }
func (m *ChatMessageAck) String() string { return proto.CompactTextString(m) }
func (*ChatMessageAck) ProtoMessage()    {}
func (*ChatMessageAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8740d2dcab84458e, []int{1}
}

func (m *ChatMessageAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageAck.Unmarshal(m, b)
}
func (m *ChatMessageAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageAck.Marshal(b, m, deterministic)
}
func (m *ChatMessageAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageAck.Merge(m, src)
}
func (m *ChatMessageAck) XXX_Size() int {
	return xxx_messageInfo_ChatMessageAck.Size(m)
}
func (m *ChatMessageAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageAck.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageAck proto.InternalMessageInfo

func (m *ChatMessageAck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatMessage)(nil), "protobufs.ChatMessage")
	proto.RegisterType((*ChatMessageAck)(nil), "protobufs.ChatMessageAck")
}

func init() { proto.RegisterFile("chatserver.proto", fileDescriptor_8740d2dcab84458e) }

var fileDescriptor_8740d2dcab84458e = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0xce, 0x48, 0x2c,
	0x29, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x53,
	0x49, 0xa5, 0x69, 0xc5, 0x4a, 0x81, 0x5c, 0xdc, 0xce, 0x19, 0x89, 0x25, 0xbe, 0xa9, 0xc5, 0xc5,
	0x89, 0xe9, 0xa9, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x4c, 0x99, 0x29, 0x42, 0x12, 0x5c, 0xec, 0xc9, 0x19, 0x89, 0x79, 0x79, 0xa9, 0x39, 0x12, 0x4c,
	0x60, 0x41, 0x18, 0x17, 0x24, 0x93, 0x0b, 0xd1, 0x24, 0xc1, 0x0c, 0x91, 0x81, 0x72, 0x95, 0x14,
	0xb8, 0xf8, 0x90, 0x8c, 0x74, 0x4c, 0xce, 0x46, 0x37, 0xd5, 0x28, 0x88, 0x8b, 0x03, 0xa4, 0xc2,
	0x2f, 0x3f, 0x25, 0x55, 0xc8, 0x8d, 0x8b, 0x3f, 0x38, 0x35, 0x2f, 0x05, 0xd9, 0x11, 0x62, 0x7a,
	0x70, 0xf7, 0xe9, 0x21, 0x89, 0x4b, 0x49, 0x62, 0x17, 0x77, 0x4c, 0xce, 0x56, 0x62, 0x48, 0x62,
	0x03, 0xcb, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x97, 0x9b, 0x9a, 0xee, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatNodeClient is the client API for ChatNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatNodeClient interface {
	SendChatMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessageAck, error)
}

type chatNodeClient struct {
	cc *grpc.ClientConn
}

func NewChatNodeClient(cc *grpc.ClientConn) ChatNodeClient {
	return &chatNodeClient{cc}
}

func (c *chatNodeClient) SendChatMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessageAck, error) {
	out := new(ChatMessageAck)
	err := c.cc.Invoke(ctx, "/protobufs.ChatNode/SendChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatNodeServer is the server API for ChatNode service.
type ChatNodeServer interface {
	SendChatMessage(context.Context, *ChatMessage) (*ChatMessageAck, error)
}

// UnimplementedChatNodeServer can be embedded to have forward compatible implementations.
type UnimplementedChatNodeServer struct {
}

func (*UnimplementedChatNodeServer) SendChatMessage(ctx context.Context, req *ChatMessage) (*ChatMessageAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendChatMessage not implemented")
}

func RegisterChatNodeServer(s *grpc.Server, srv ChatNodeServer) {
	s.RegisterService(&_ChatNode_serviceDesc, srv)
}

func _ChatNode_SendChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatNodeServer).SendChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufs.ChatNode/SendChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatNodeServer).SendChatMessage(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufs.ChatNode",
	HandlerType: (*ChatNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendChatMessage",
			Handler:    _ChatNode_SendChatMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chatserver.proto",
}
